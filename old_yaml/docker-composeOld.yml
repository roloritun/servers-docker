version: "3.7"
services:
#Databases
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
    - "5432:5432"
    volumes:
    - ./postgres:/postgresdb
    networks:
      servers_net:
        aliases:
            - "postgres"

  mysql:
    #env_file: .env
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306"
    volumes:
      - ./mysql/db:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/init.d:/docker-entrypoint-initdb.d
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sample
      MYSQL_USER: appuser
      MYSQL_PASSWORD: 12345678   
    networks:
      servers_net:
        aliases:
            - "mysql"
  sql.data:
   image: mssql-linux
   container_name: mssql-linux
   build:
     context: ./mssql
     dockerfile: Dockerfile
   ports:
      - "1433:1433"    
   environment:
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y
   networks:
      servers_net:
        aliases:
            - "mssql-linux"
 # Redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379"
    volumes:
      - ./redis/rdb:/data
    restart: always
    command: redis-server --requirepass password --appendonly yes
    networks:
      servers_net:
        aliases:
            - "redis"

  # Mongo
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    networks:
      servers_net:
        aliases:
            - "mongo"
  # Cassandra
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042"
    networks:
      servers_net:
        aliases:
            - "cassandra"
  # RabbitMQ
  rmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "15671:15671"
      - "15672:15672"
    environment:
      RABBITMQ_ERLANG_COOKIE: abcabcabcabc
      RABBITMQ_DEFAULT_USER: hiromaily
      RABBITMQ_DEFAULT_PASS: hiropass
    networks:
      servers_net:
        aliases:
            - "rabbitmq"
#Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      servers_net:
        aliases:
            - "elasticsearch"
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    container_name: elasticsearch2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/esdata2:/usr/share/elasticsearch/data
    networks:
      servers_net:
        aliases:
            - "elasticsearch2"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: kibana
    environment:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      servers_net:
        aliases:
            - "kibana"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000      
    volumes:
      - kafka_zookeeper:/opt/zookeeper-3.4.13/data
    networks:
      servers_net:
        aliases:
            - "zookeeper"

  kafka1:
    image: wurstmeister/kafka:latest
    container_name: kafka1
    command: [start-kafka.sh]
    expose:
      - "8080"
      - "9092"
      - "9999"
    ports:
        - "8181:8080"
        - "9191:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_BROKER_ID: 500
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml 
      JMX_PORT: 9999
    volumes:
      - ./kafka/prometheus:/prometheus
      - kafka_kafka1:/opt/kafka_2.12-2.2.0/logs
    networks:
      servers_net:
        aliases:
            - "kafka1"
    depends_on:
      - "zookeeper"

  kafka2:
    image: wurstmeister/kafka:latest
    container_name: kafka2
    command: [start-kafka.sh]
    expose:
      - "8080"
      - "9092"
      - "9999"
    ports:
        - "8282:8080"
        - "9292:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_BROKER_ID: 501
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml 
      JMX_PORT: 9999
    volumes:
      - ./kafka/prometheus:/prometheus
      - kafka_kafka2:/opt/kafka_2.12-2.2.0/logs
    depends_on:
      - "zookeeper"
    networks:
      servers_net:
        aliases:
            - "kafka2"

  kafka_manager:
    image: sheepkiller/kafka-manager:latest
    container_name: kafka_manager
    expose:
      - "9000"
    ports:
        - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
    networks:
      servers_net:
        aliases:
            - "kafka_manager"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    expose:
      - "9090"
    ports:
        - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/flink.rules.yml:/etc/prometheus/flink.rules.yml
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
    networks:
      servers_net:
        aliases:
            - "prometheus"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    expose:
      - "3000"
    ports:
        - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - "prometheus"
    networks:
      servers_net:
        aliases:
            - "grafana"

  zeppelin:
    image: apache/zeppelin:0.8.1
    hostname: zeppelin
    container_name: zeppelin
    expose:
      - "8080"
      - "8443"
      - "4040"
    ports:
        - "8080:8080"
        - "8443:8443"
        - "4040:4040"
    volumes:
      - ./zeppelin/datadrive:/datadrive
      - ./zeppelin/pyspark-notebooks:/zeppelin/notebook
      - ./zeppelin/zeppelin-interpreters/interpreter.json:/zeppelin/conf/interpreter.json
    networks:
      servers_net:
        aliases: 
          - "zeppelin"

#Adminer
  adminer:
    restart: always
    image: dockette/adminer
    container_name: adminer
    ports:
    - "9393:80"
    networks:
      servers_net:
        aliases: 
          - "adminer"

networks:
  servers_net:
    name: servers_net
    driver: bridge
    # ipam:
    #   driver: default
    #   config:
    #     - subnet: 172.25.0.0/16
    #       gateway: 172.25.0.1

volumes:
  kafka_zookeeper:
  kafka_kafka1:
  kafka_kafka2:
  esdata1:
#    driver: local
  esdata2:
#    driver: local

